<h1>Be Well</h1>

<div id="player" data-status="true"></div>

<script>

	var player;
    function onYouTubePlayerAPIReady() {
        player = new YT.Player('player', {
          height: '400',
          width: '600',
          videoId: 'EKymvBM6Udc', //starting video
          playerVars: {
          	'autoplay': 0,
          	'controls': 0,
          	// 'modestbranding': 0,
          	'rel': 0,
          	'showinfo': 0
          },
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
    }

  // autoplay video
    function onPlayerReady(event) {
    	// $('.ytp-watermark yt-uix-sessionlink').remove();
        event.target.playVideo();
    }


	function onPlayerStateChange(event) {  
		console.log("event data", event.data);      
		//if video ends
			// check wellbeing
			//determine wellbeing level
			//grab random status video with that level
			//


        if(event.data === 0) {  
        	console.log("done playing");
        	var statusLevel = 2;
        	// var statusLevel = simulation.checkWellbeing(wellbeing);
        	// var newUrl = statVideoRequest(statusLevel);
        	// //ajax request   
        	$.ajax({
				type: "GET",
				url: "statuses",
				dataType: "json",
				data: {
					statusLevel: 2
				}, 
				success: function (res) {
					console.log("SUCCESS", res);
					var url = res["url"]
					player.loadVideoById(url);
				},
				error: function (err) {
					console.log("ERROR", err);
				}
			});
        	// console.log("newUrl", newUrl); 
        	// player.loadVideoById(newUrl);
        	//this is what loads a new video
   		 }
   	}



    // var timeAmt = 30000;
    // var interval = setTimeout(simulation.checkInterval, timeAmt);

    var wellbeing = 100;
    var interrupt = true;

    var simulation = {
    	
    	'timeAmt': 3000,

    	begin: function() {

    	},

    	wellbeingDecay: function() {
    		// console.log("checking the wellbeing, y'all");
    		interval = setTimeout(simulation.wellbeingDecay, simulation.timeAmt);
    		if(interrupt) {
    			wellbeing = wellbeing - 1;
    			// console.log("current wellbeing", wellbeing);
    		}
    		simulation.checkWellbeing(wellbeing);
    	},
    	//1 is happy, 2 is decent, 3 is depressed, 4 is very depressed
    	checkWellbeing: function(wellbeing) {
	    	//if its between 75 and 100 = happy
	    	if(wellbeing >= 75 && wellbeing <= 100) {
					// console.log("happy");
					return 1;	
	    	} else if(wellbeing >= 50 && wellbeing <= 74) {
	    			// console.log("decent");
	    			return 2;
	    	} else if(wellbeing >= 25 && wellbeing <= 49) {
	    			// console.log("depressed");
	    			return 3;
	    	} else if(wellbeing >= 1 && wellbeing <= 24) {
	    			// console.log("very depressed");
	    			return 4;
	    	} else {
	    		console.log("Wellbeing low, restart");
	    	}
    	},

    	detectInput: function() {
    		$(document).on("keydown", function (e) {

    			var key = e.which;
    			switch(key) {
    			//Q
    			case 81:
    				console.log("Feed");
    				interrupt = false;
    				console.log("interrupt", interrupt);
    				interrupt = true;
    				console.log("interrupt", interrupt);
    				player.loadVideoById('vxpYUATrIrQ');
    				//increment wellbeing
    				break;
    			//W
    			case 87:
    				console.log("Encourage");
    				interrupt = false;
    				console.log("interrupt", interrupt);
    				interrupt = true;
    				console.log("interrupt", interrupt)
    				break;
    				//increment wellbeing
    			//E
    			case 69:
    				console.log("Discipline");
    				interrupt = false;
    				console.log("interrupt", interrupt);
    				interrupt = true;
    				console.log("interrupt", interrupt)
    				break;
    				//decrement wellbeing
    			//R
    			case 82:
    				console.log("Entertain");
    				interrupt = false;
    				console.log("interrupt", interrupt);
    				interrupt = true;
    				console.log("interrupt", interrupt)
    				break;
    				//randomize wellbeing for decrement or implement
    			default:
    				console.log("That's another key bruh");
    			}
    		});
    	}, 



    };


    var interval = setTimeout(simulation.wellbeingDecay(), simulation.timeAmt);

    simulation.detectInput();

    console.log("testval", simulation.testval);


    
	//timer -- 
	//but needs to be disabled during actionVideo plays

	//pull in all action urls at the beginning? that way you don't have to keep making a request 

	// 
	$.ajax({
				type: "GET",
				url: "statuses",
				dataType: "json",
				data: {
					statusLevel: 2
				}, 
				success: function (res) {
					console.log("SUCCESS", res);
					var url = res["url"]
					player.loadVideoById(url);
				},
				error: function (err) {
					console.log("ERROR", err);
				}
			});
	function detectInput() {
		//if x key
			//disable timerChecker
			interrupt = false;
			$.ajax({
				type: "GET",
				url: "actions",
				dataType: "json",
				data: {
					
				}


			})
			//interruption disable
			//decrement wellbeing
			//get action video
			//playvideo
			//checkwellbeing
			//enable timer checker again
		//if y key
			//disable timerChecker
			//interruption disable
			//decrement wellbeing
			//get action video
			//playvideo
			//checkwellbeing
			//enable timer checker again
		//if l key
			//disable timerChecker
			//interruption enable
			//decrement wellbeing
			//get action video
			//playvideo
			//checkwellbeing
			//enable timer checker again
		//if j key
			//disable timerChecker
			//interruption disable
			//decrement wellbeing
			//get action video
			//playvideo
			//checkwellbeing
			//enable timer checker again
	}

	//interrupt false
	//get action video
	//


	function statVideoRequest(level) {
		//makes ajax requests to server for a new level
		//returns random video with correct actionType
		$.ajax({
			type: "GET",
			url: "statuses",
			dataType: "json",
			data: {
				statusLevel: level
			}, 
			success: function (res) {
				console.log("SUCCESS", res);
				var url = res["url"]
				return url;
			},
			error: function (err) {
				console.log("ERROR", err);
			}
		});
	}

	function actVideoRequest(actionType) {
		//makes an ajax request to server for a new action video
		//returns random video with correct actionType

	}

</script>
