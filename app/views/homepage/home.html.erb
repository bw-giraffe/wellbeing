<style>
#outer{
	width: 100%;
  	text-align: center;
}
#player{
	display: inline-block;

}
</style>
<h1>Be Well</h1>
<div id="outer">
	<div id="player" data-status="true"></div>
</div>
<div id="chart_div"></div>
<script>
	var player;
    function onYouTubePlayerAPIReady() {
        player = new YT.Player('player', {
          height: '400',
          width: '600',
          videoId: 'EVdPt36x6Hw', //starting video
          playerVars: {
          	'autoplay': 0,
          	'controls': 0,
          	// 'modestbranding': 0,
          	'rel': 0,
          	'showinfo': 0
          },
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
    }

  // autoplay video
    function onPlayerReady(event) {
    	// $('.ytp-watermark yt-uix-sessionlink').remove();
        event.target.playVideo();
    }


	function onPlayerStateChange(event) {  
		// console.log("event data", event.data);      

        if(event.data === 0) {  
        	console.log("done playing");
        	console.log("YOUR WELLBEING IS ", wellbeing);
        	var lvl = simulation.checkWellbeing(wellbeing);
        	google.charts.setOnLoadCallback(drawRightY(wellbeing));
        	console.log("lvl", lvl);
        	// //ajax request   
	        	$.ajax({
					type: "GET",
					url: "statuses",
					dataType: "json",
					data: {
						statusLevel: lvl
					}, 
					success: function (res) {
						// console.log("SUCCESS", res);
						var url = res["url"]
						player.loadVideoById(url);
					},
					error: function (err) {
						alert("ERROR", err["status"]);
					}
				});
   		 }

   	}

    var wellbeing = 80;
    var interrupt = true;

    var simulation = {
    	
    	'timeAmt': 150000,

    	begin: function() {

    	},

    	wellbeingDecay: function() {
    		// console.log("checking the wellbeing, y'all");
    		interval = setTimeout(simulation.wellbeingDecay, simulation.timeAmt);
    		wellbeing = wellbeing - 5;
    		console.log("wellbeing decay", wellbeing);
    			// console.log("current wellbeing", wellbeing
    		// simulation.checkWellbeing(wellbeing);
    	},
    	//1 is happy, 2 is decent, 3 is depressed, 4 is very depressed
    	checkWellbeing: function(wellbeing) {
	    	//if its between 75 and 100 = happy
	    	if(wellbeing >= 75) {
					// console.log("happy");
					return 1;	
	    	} else if(wellbeing >= 50 && wellbeing <= 74) {
	    			// console.log("decent");
	    			return 2;
	    	} else if(wellbeing >= 25 && wellbeing <= 49) {
	    			// console.log("depressed");
	    			return 3;
	    	} else if(wellbeing >= 1 && wellbeing <= 24) {
	    			// console.log("very depressed");
	    			return 4;
	    	} else {
	    		alert("YOU HAVE KILLED YOUR BELOVED PET.");
	    		location.reload();
	    	}
    	},

    	detectInput: function() {
	    	$(document).on("keydown", function (e) {
    			function getAction(type) {
    				// interrupt = false;
    				// console.log("interrupt", interrupt);
					$.ajax({
						type: "GET",
						url: "actions",
						dataType: "json",
						data: {
							actionType: type
						},
						success: function(res) {
							console.log("SUCCESS RETRIEVING ACTION", res);
							var url = res["url"];
							player.loadVideoById(url);
							// interrupt = true;
						},
						error: function (err) {
							console.log("ERROR", err);
							// interrupt = true; 
						}
					});
    			}
    			

	    			var key = e.which;
	    			switch(key) {
	    			//Q
	    			case 65:
	    				console.log("Feed");
	    				wellbeing = wellbeing + 5;
	    				getAction("F");
	    				break;
	    			//W
	    			case 83:
	    				console.log("Encourage");
	    				wellbeing = wellbeing + 4;
	    				getAction("E");
	    				break;
	    				//increment wellbeing
	    			//E
	    			case 68:
	    				console.log("Discipline");
	    				wellbeing = wellbeing - 10;
	    				getAction("D");
	    				break;
	    				//decrement wellbeing
	    			//R
	    			case 70:
	    				console.log("Entertain");
	    				wellbeing = wellbeing + 4;
	    				getAction("EN");
	    				break;
	    				//randomize wellbeing for decrement or implement
	    			default:
	    				console.log("That's another key bruh");
	    			}
	    		});
			}
    };

    var interval = setTimeout(simulation.wellbeingDecay(), simulation.timeAmt);

    simulation.detectInput();

   	google.charts.load('current', {packages: ['corechart', 'bar']});


	function drawRightY(wellbeing) {
      var data = google.visualization.arrayToDataTable([
       ['Wellbeing', 'Level', { role: 'interval' } ],
        ['Wellbeing', wellbeing, 'color: red']
      ]);

      var options = {
      	width: 600, 
      	height: 125, 
      	bars: 'horizontal'
      };
      var material = new google.charts.Bar(document.getElementById('chart_div'));
      material.draw(data, options);
    }

</script>
